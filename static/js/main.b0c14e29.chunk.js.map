{"version":3,"sources":["components/Tabs/helper.tsx","components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["getSelectedTabById","tabs","selectedTabId","find","tab","id","Tabs","onTabSelected","selectedTab","className","map","classNames","href","onClick","title","content","App","useState","setSelectedTab","ReactDOM","render","document","getElementById"],"mappings":"2MAEaA,EAAqB,SAChCC,EACAC,GAEA,OAAOD,EAAKE,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOH,MAAkBD,EAAK,I,OCM/CK,EAAwB,SAAC,GAI/B,IAHLL,EAGI,EAHJA,KACAC,EAEI,EAFJA,cACAK,EACI,EADJA,cAEMC,EAAcR,EAAmBC,EAAMC,GAE7C,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKO,UAAU,gBAAf,SACE,6BACGR,EAAKS,KAAI,SAACN,GAAD,OACR,oBACEK,UAAWE,IACT,CACE,YAAaH,EAAYH,KAAOD,EAAIC,KAGxC,UAAQ,MANV,SASE,mBACEO,KAAI,WAAMR,EAAIC,IACd,UAAQ,UACRQ,QAAS,WACHT,EAAIC,KAAOG,EAAYH,IACzBE,EAAcH,IALpB,SASGA,EAAIU,SAXFV,EAAIC,WAkBjB,qBAAKI,UAAU,QAAQ,UAAQ,aAA/B,SACGD,EAAYO,cC1CRd,EAAO,CAClB,CAAEI,GAAI,QAASS,MAAO,QAASC,QAAS,eACxC,CAAEV,GAAI,QAASS,MAAO,QAASC,QAAS,eACxC,CAAEV,GAAI,QAASS,MAAO,QAASC,QAAS,gBAG7BC,EAAgB,WAC3B,MAAwCC,mBAAShB,EAAK,GAAGI,IAAzD,mBAAOH,EAAP,KAAsBgB,EAAtB,KAMMV,EAAcR,EAAmBC,EAAMC,GAE7C,OACE,sBAAKO,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBD,EAAYM,SAGlC,cAAC,EAAD,CACEb,KAAMA,EACNC,cAAeA,EACfK,cAfgB,SAACH,GACrBc,EAAed,EAAIC,WCfvBc,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.b0c14e29.chunk.js","sourcesContent":["import { Tab } from '../../Types/Tab';\n\nexport const getSelectedTabById = (\n  tabs: Tab[],\n  selectedTabId: string,\n): Tab => {\n  return tabs.find(tab => tab.id === selectedTabId) || tabs[0];\n};\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport { Tab } from '../../Types/Tab';\nimport { getSelectedTabById } from './helper';\n\ntype Props = {\n  tabs: Tab[],\n  selectedTabId: string,\n  onTabSelected: (tab: Tab) => void,\n};\n\nexport const Tabs: React.FC<Props> = ({\n  tabs,\n  selectedTabId,\n  onTabSelected,\n}) => {\n  const selectedTab = getSelectedTabById(tabs, selectedTabId);\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map((tab) => (\n            <li\n              className={classNames(\n                {\n                  'is-active': selectedTab.id === tab.id,\n                },\n              )}\n              data-cy=\"Tab\"\n              key={tab.id}\n            >\n              <a\n                href={`#${tab.id}`}\n                data-cy=\"TabLink\"\n                onClick={() => {\n                  if (tab.id !== selectedTab.id) {\n                    onTabSelected(tab);\n                  }\n                }}\n              >\n                {tab.title}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {selectedTab.content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\nimport { Tab } from './Types/Tab';\nimport { getSelectedTabById } from './components/Tabs/helper';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTabId, setSelectedTab] = useState(tabs[0].id);\n\n  const onTabSelected = (tab: Tab) => {\n    setSelectedTab(tab.id);\n  };\n\n  const selectedTab = getSelectedTabById(tabs, selectedTabId);\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${selectedTab.title}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        onTabSelected={onTabSelected}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}